package net.boredomist.shmup;

// everything is in degrees

public class MathHelper {
	// precalculated values for sin and cosine, to speed up computation

	// cos 0..90
	static final float cosCache[] = { 1.0f, 0.9998476951563913f,
			0.9993908270190958f, 0.9986295347545738f, 0.9975640502598242f,
			0.9961946980917455f, 0.9945218953682733f, 0.992546151641322f,
			0.9902680687415704f, 0.9876883405951378f, 0.984807753012208f,
			0.981627183447664f, 0.9781476007338057f, 0.9743700647852352f,
			0.9702957262759965f, 0.9659258262890683f, 0.9612616959383189f,
			0.9563047559630355f, 0.9510565162951535f, 0.9455185755993168f,
			0.9396926207859084f, 0.9335804264972017f, 0.9271838545667874f,
			0.9205048534524404f, 0.9135454576426009f, 0.9063077870366499f,
			0.898794046299167f, 0.8910065241883679f, 0.882947592858927f,
			0.8746197071393957f, 0.8660254037844387f, 0.8571673007021123f,
			0.848048096156426f, 0.838670567945424f, 0.8290375725550417f,
			0.8191520442889918f, 0.8090169943749475f, 0.7986355100472928f,
			0.7880107536067219f, 0.7771459614569709f, 0.766044443118978f,
			0.754709580222772f, 0.7431448254773942f, 0.7313537016191705f,
			0.7193398003386512f, 0.7071067811865476f, 0.6946583704589974f,
			0.6819983600624985f, 0.6691306063588582f, 0.6560590289905074f,
			0.6427876096865394f, 0.6293203910498375f, 0.6156614753256583f,
			0.6018150231520483f, 0.5877852522924731f, 0.573576436351046f,
			0.5591929034707468f, 0.5446390350150272f, 0.5299192642332049f,
			0.5150380749100544f, 0.5000000000000001f, 0.4848096202463371f,
			0.46947156278589086f, 0.45399049973954686f, 0.43837114678907746f,
			0.42261826174069944f, 0.4067366430758004f, 0.3907311284892737f,
			0.3746065934159122f, 0.35836794954530016f, 0.3420201433256688f,
			0.32556815445715676f, 0.30901699437494745f, 0.29237170472273677f,
			0.27563735581699916f, 0.25881904510252074f, 0.24192189559966767f,
			0.22495105434386514f, 0.20791169081775923f, 0.19080899537654492f,
			0.17364817766693041f, 0.15643446504023092f, 0.13917310096006547f,
			0.12186934340514749f, 0.10452846326765346f, 0.08715574274765836f,
			0.06975647374412523f, 0.052335956242943966f, 0.03489949670250108f,
			0.0174524064372836f, 0.0f };

	// sin 0..90
	static final float sinCache[] = { 0.0f, 0.01745240643728351f,
			0.03489949670250097f, 0.05233595624294383f, 0.0697564737441253f,
			0.08715574274765817f, 0.10452846326765346f, 0.12186934340514748f,
			0.13917310096006544f, 0.15643446504023087f, 0.17364817766693033f,
			0.1908089953765448f, 0.20791169081775931f, 0.22495105434386498f,
			0.24192189559966773f, 0.25881904510252074f, 0.27563735581699916f,
			0.2923717047227367f, 0.3090169943749474f, 0.3255681544571567f,
			0.3420201433256687f, 0.35836794954530027f, 0.374606593415912f,
			0.3907311284892737f, 0.40673664307580015f, 0.42261826174069944f,
			0.4383711467890774f, 0.45399049973954675f, 0.4694715627858908f,
			0.48480962024633706f, 0.49999999999999994f, 0.5150380749100542f,
			0.5299192642332049f, 0.544639035015027f, 0.5591929034707468f,
			0.573576436351046f, 0.5877852522924731f, 0.6018150231520483f,
			0.6156614753256583f, 0.6293203910498375f, 0.6427876096865393f,
			0.6560590289905073f, 0.6691306063588582f, 0.6819983600624985f,
			0.6946583704589973f, 0.7071067811865475f, 0.7193398003386511f,
			0.7313537016191705f, 0.7431448254773942f, 0.7547095802227719f,
			0.766044443118978f, 0.7771459614569708f, 0.7880107536067219f,
			0.7986355100472928f, 0.8090169943749475f, 0.8191520442889918f,
			0.8290375725550417f, 0.8386705679454239f, 0.8480480961564261f,
			0.8571673007021122f, 0.8660254037844386f, 0.8746197071393957f,
			0.8829475928589269f, 0.8910065241883678f, 0.898794046299167f,
			0.9063077870366499f, 0.9135454576426009f, 0.9205048534524404f,
			0.9271838545667873f, 0.9335804264972017f, 0.9396926207859083f,
			0.9455185755993167f, 0.9510565162951535f, 0.9563047559630354f,
			0.9612616959383189f, 0.9659258262890683f, 0.9702957262759965f,
			0.9743700647852352f, 0.9781476007338057f, 0.981627183447664f,
			0.984807753012208f, 0.9876883405951378f, 0.9902680687415704f,
			0.992546151641322f, 0.9945218953682733f, 0.9961946980917455f,
			0.9975640502598242f, 0.9986295347545738f, 0.9993908270190958f,
			0.9998476951563913f, 1.0f };

	public static float cos(int theta) {
		int t3 = theta % 360;
		boolean b = t3 < 180;

		if (!b)
			t3 -= 180;
		return (t3 < 90 ? cosCache[t3] : -cosCache[90 - (t3 % 90)])
				* (b ? 1 : -1);
	}

	public static float sin(int theta) {
		int t3 = theta % 360;
		boolean b = t3 < 180;

		if (!b)
			t3 -= 180;
		return (t3 < 90 ? sinCache[t3] : sinCache[90 - (t3 % 90)])
				* (b ? 1 : -1);
	}
}